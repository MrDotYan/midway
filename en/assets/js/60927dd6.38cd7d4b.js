"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[77525],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||s;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<s;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),r=n(86010);const s={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(s.tabItem,o),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(87462),r=n(67294),s=n(86010),o=n(12466),i=n(70989),l=n(72389);const p={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function c(e){let{className:t,block:n,selectedValue:i,selectValue:l,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),m=e=>{const t=e.currentTarget,n=u.indexOf(t),a=c[n].value;a!==i&&(d(t),l(a))},h=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:h,onClick:m},o,{className:(0,s.Z)("tabs__item",p.tabItem,o?.className,{"tabs__item--active":i===t})}),n??t)})))}function u(e){let{lazy:t,children:n,selectedValue:a}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function d(e){const t=(0,i.Y)(e);return r.createElement("div",{className:(0,s.Z)("tabs-container",p.tabList)},r.createElement(c,(0,a.Z)({},e,t)),r.createElement(u,(0,a.Z)({},e,t)))}function m(e){const t=(0,l.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},70989:(e,t,n)=>{n.d(t,{Y:()=>d});var a=n(67294),r=n(16550),s=n(91980),o=n(67392),i=n(50012);function l(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??l(n);return function(e){const t=(0,o.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function c(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function u(e){let{queryString:t=!1,groupId:n}=e;const o=(0,r.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(i),(0,a.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(o.location.search);t.set(i,e),o.replace({...o.location,search:t.toString()})}),[i,o])]}function d(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=p(e),[o,l]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[d,m]=u({queryString:n,groupId:r}),[h,k]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,i.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),g=(()=>{const e=d??h;return c({value:e,tabValues:s})?e:null})();(0,a.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!c({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),m(e),k(e)}),[m,k,s]),tabValues:s}}},54514:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var a=n(87462),r=(n(67294),n(3905)),s=n(65488),o=n(85162);const i={},l="Test",p={unversionedId:"testing",id:"testing",title:"Test",description:"In application development, testing is very important. In the period of rapid iteration of traditional Web products, each test case provides a guarantee for the stability of the application.  API upgrade, test cases can well check whether the code is backwards compatible.  For all possible inputs, once the test covers, its output can be clarified.  After the code changes, you can judge whether the code changes affect the determined results through the test results.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/testing.md",sourceDirName:".",slug:"/testing",permalink:"/en/docs/testing",draft:!1,editUrl:"https://github.com/midwayjs/midway/tree/main/site/docs/testing.md",tags:[],version:"current",frontMatter:{},sidebar:"common",previous:{title:"Dependency injection",permalink:"/en/docs/container"},next:{title:"Data simulation",permalink:"/en/docs/mock"}},c={},u=[{value:"Test directory structure",id:"test-directory-structure",level:2},{value:"Test Run Tool",id:"test-run-tool",level:2},{value:"Assertion library",id:"assertion-library",level:2},{value:"Create test",id:"create-test",level:2},{value:"Test HTTP service",id:"test-http-service",level:2},{value:"Test service",id:"test-service",level:2},{value:"createApp option parameters",id:"createapp-option-parameters",level:2},{value:"Close option parameter",id:"close-option-parameter",level:2},{value:"Test with bootstrap files",id:"test-with-bootstrap-files",level:2},{value:"Run a single test",id:"run-a-single-test",level:2},{value:"Customize Jest file content",id:"customize-jest-file-content",level:2},{value:"Common settings",id:"common-settings",level:2},{value:"Example 1: The problem of long test code time",id:"example-1-the-problem-of-long-test-code-time",level:3},{value:"Example 2: Global Environment Variables",id:"example-2-global-environment-variables",level:3},{value:"Example 3: Processing where the program cannot exit normally",id:"example-3-processing-where-the-program-cannot-exit-normally",level:3},{value:"Example 4: Parallel Change to Serial Execution",id:"example-4-parallel-change-to-serial-execution",level:3},{value:"Editor configuration",id:"editor-configuration",level:2},{value:"Jetbrain Webstorm/Idea configuration",id:"jetbrain-webstormidea-configuration",level:3},{value:"VSCode configuration",id:"vscode-configuration",level:3},{value:"About alias paths",id:"about-alias-paths",level:2},{value:"About mock data",id:"about-mock-data",level:2}],d={toc:u},m="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"test"},"Test"),(0,r.kt)("p",null,"In application development, testing is very important. In the period of rapid iteration of traditional Web products, each test case provides a guarantee for the stability of the application.  API upgrade, test cases can well check whether the code is backwards compatible.  For all possible inputs, once the test covers, its output can be clarified.  After the code changes, you can judge whether the code changes affect the determined results through the test results."),(0,r.kt)("p",null,"Therefore, the Controller, Service and other codes of the application must have corresponding unit tests to ensure the code quality.  Of course, each functional change and refactoring of the framework and components requires corresponding unit tests, and the modified code is required to be covered by the 100% as much as possible."),(0,r.kt)("p",null,"The current testing libraries in the community are mainly ",(0,r.kt)("inlineCode",{parentName:"p"},"jest")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"mocha"),". This article uses ",(0,r.kt)("inlineCode",{parentName:"p"},"jest")," as an example."),(0,r.kt)("h2",{id:"test-directory-structure"},"Test directory structure"),(0,r.kt)("p",null,"We agree that the ",(0,r.kt)("inlineCode",{parentName:"p"},"test")," directory is the directory where all test scripts are stored, and the ",(0,r.kt)("inlineCode",{parentName:"p"},"fixtures")," used for testing and related auxiliary scripts should be placed in this directory."),(0,r.kt)("p",null,"The test script file is named ",(0,r.kt)("inlineCode",{parentName:"p"},"${filename}.test.ts")," and must be suffixed with ",(0,r.kt)("inlineCode",{parentName:"p"},".test.ts"),"."),(0,r.kt)("p",null,"An example of an application's test directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"\u279c  my_midway_app tree\n.\n\u251c\u2500\u2500 src\n\u251c\u2500\u2500 test\n\u2502   \u2514\u2500\u2500 controller\n\u2502       \u2514\u2500\u2500 home.controller.test.ts\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 tsconfig.json\n")),(0,r.kt)("h2",{id:"test-run-tool"},"Test Run Tool"),(0,r.kt)("p",null,"By default, Midway provides the ",(0,r.kt)("inlineCode",{parentName:"p"},"midway-bin")," command to run the test script. In the new version, Midway replaces mocha with Jest by default. It is more powerful and more integrated, which allows us to ",(0,r.kt)("strong",{parentName:"p"},"focus on writing test code")," instead of choosing those test peripheral tools and modules."),(0,r.kt)("p",null,"You only need to configure the ",(0,r.kt)("inlineCode",{parentName:"p"},"scripts.test")," on the ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,r.kt)(s.Z,{groupId:"scripts",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"jest",label:"Use jest directly",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "scripts": {\n     "test": "jest"\n   }\n}\n')),(0,r.kt)("p",null,"Then you can run the test according to the standard ",(0,r.kt)("inlineCode",{parentName:"p"},"npm test"),". In the default scaffolding, we have provided this command, so you can run the test out of the box."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u279c my_midway_app npm run test\n\n> my_midway_project@1.0.0 test /Users/harry/project/application/my_midway_app\n>jest\n\nTesting all *.test.ts...\n  PASS test/controller/home.controller.test.ts\n  PASS test/controller/api.controller.test.ts\n\nTest Suites: 2 passed, 2 total\nTests: 2 passed, 2 total\nSnapshots: 0 total\nTime: 3.26 seconds\nRan all test suites matching /\\/test\\/[^.]*\\.test\\.ts$/i.\n"))),(0,r.kt)(o.Z,{value:"cli",label:"Use @midwayjs/cli",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "test": "midway-bin test --ts"\n  }\n}\n')),(0,r.kt)("p",null,"Then you can run the test according to the standard ",(0,r.kt)("inlineCode",{parentName:"p"},"npm test"),". By default, we have already provided this command in the scaffold, so you can run the test out of the box."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u279c  my_midway_app npm run test\n\n> my_midway_project@1.0.0 test /Users/harry/project/application/my_midway_app\n> midway-bin test\n\nTesting all *.test.ts...\n PASS  test/controller/home.controller.test.ts\n PASS  test/controller/api.controller.test.ts\n\nTest Suites: 2 passed, 2 total\nTests:       2 passed, 2 total\nSnapshots:   0 total\nTime:        3.26 s\nRan all test suites matching /\\/test\\/[^.]*\\.test\\.ts$/i.\n")))),(0,r.kt)("h2",{id:"assertion-library"},"Assertion library"),(0,r.kt)("p",null,"Jest has a powerful ",(0,r.kt)("inlineCode",{parentName:"p"},"expect")," assertion library, which can be directly used in the global."),(0,r.kt)("p",null,"For example, commonly used."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"Expect (result.status).toBe(200); // Whether the value is equal to a certain value, the reference is equal\nexpect(result.status).not.toBe(200);\nExpect (result).toEqual('hello'); //Simple match, the same object attribute is also true\nExpect (result).toStrictEqual('hello'); // Strictly match\nExpect (['lime', 'apple']).toContain('lime'); //Judge whether it is in an array\n")),(0,r.kt)("p",null,"For more information about assertion methods, see ",(0,r.kt)("a",{parentName:"p",href:"https://jestjs.io/docs/en/expect"},"https:// jestjs.io/docs/en/expect"),"."),(0,r.kt)("h2",{id:"create-test"},"Create test"),(0,r.kt)("p",null,"Different upper-level frameworks have different testing methods. Take the most commonly used HTTP service as an example. If you need to test an HTTP service, generally speaking, we need to create an HTTP service and then request it with the client."),(0,r.kt)("p",null,"Midway provides a basic set of ",(0,r.kt)("inlineCode",{parentName:"p"},"@midwayjs/mock")," tools to help the upper framework test in this area. At the same time, it also provides convenient methods to create Framework,App and close."),(0,r.kt)("p",null,"The whole process approach is divided into several parts:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"createApp")," to create an app object for a Framework"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"close")," closes a Framework or an app")),(0,r.kt)("p",null,"In order to keep the test simple, the whole process currently reveals these two methods."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// create app\nconst app = await createApp<Framework>();\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Framework")," passed in here is used to derive the type for the TypeScript. In this way, the main frame app instance can be returned."),(0,r.kt)("p",null,"After the app is run, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"close")," method to close the app."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createApp, close } from '@midwayjs/mock';\n\nawait close(app);\n")),(0,r.kt)("p",null,"In fact, ",(0,r.kt)("inlineCode",{parentName:"p"},"@midwayjs/bootstrap")," is encapsulated in ",(0,r.kt)("inlineCode",{parentName:"p"},"createApp")," method, and interested partners can read the source code."),(0,r.kt)("h2",{id:"test-http-service"},"Test HTTP service"),(0,r.kt)("p",null,"In addition to creating app, ",(0,r.kt)("inlineCode",{parentName:"p"},"@midwayjs/mock")," also provides a simple client method for quickly creating test behaviors corresponding to various services."),(0,r.kt)("p",null,"For example, for HTTP, we encapsulate supertest and provide ",(0,r.kt)("inlineCode",{parentName:"p"},"createHttpRequest")," methods to create HTTP clients."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// Create a client request\nconst result = await createHttpRequest(app).get('/');\n// Test returns results\nexpect(result.text).toBe('Hello Midwayjs!');\n")),(0,r.kt)("p",null,"It is recommended to reuse the app instance in a test file. The complete test example is as follows."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createApp, close, createHttpRequest } from '@midwayjs/mock';\nimport { Framework, Application } from '@midwayjs/koa';\nimport * as assert from 'assert';\n\ndescribe('test/controller/home.test.ts', () => {\n\n  let app: Application;\n\n  beforeAll(async () => {\n    // Create app only once and can be reused.\n    app = await createApp<Framework>();\n  });\n\n  afterAll(async () => {\n    // close app\n    await close(app);\n  });\n\n  it('should GET /', async () => {\n    // make request\n    const result = await createHttpRequest(app)\n      .get('/')\n      .set('x-timeout', '5000');\n\n    // use expect by jest\n    expect(result.status).toBe(200);\n    expect(result.text).toBe('Hello Midwayjs!');\n\n    // or use assert\n    assert.deepStrictEqual(result.status, 200);\n    assert.deepStrictEqual(result.text, 'Hello Midwayjs!');\n  });\n\n  it('should POST /', async () => {\n    // make request\n    const result = await createHttpRequest(app)\n      .post('/')\n      .send({id: '1'});\n\n    // use expect by jest\n    expect(result.status).toBe(200);\n  });\n\n});\n\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")),(0,r.kt)("p",null,"Create a get request and pass the query parameter."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await createHttpRequest(app)\n  .get('/set_header')\n  .query({ name: 'harry' });\n")),(0,r.kt)("p",null,"create a post request and pass the body parameter."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await createHttpRequest(app)\n  .post('/user/catchThrowWithValidate')\n  .send({id: '1'});\n")),(0,r.kt)("p",null,"create a post request and pass the form body parameter."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await createHttpRequest(app)\n  .post('/param/body')\n  .type('form')\n  .send({id: '1'})\n")),(0,r.kt)("p",null,"Pass the header header."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await createHttpRequest(app)\n  .get('/set_header')\n    .set({\n    'x-bbb ': ' 123'\n  })\n  .query({ name: 'harry' });\n")),(0,r.kt)("p",null,"Pass cookie."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const cookie = [\n  \"koa.sess=eyJuYW1lIjoiaGFycnkiLCJfZXhwaXJlIjoxNjE0MTQ5OTQ5NDcyLCJfbWF4QWdlIjo4NjQwMDAwMH0=; path=/; expires=Wed, 24 Feb 2021 06:59:09 GMT; httponly \",\n  \"koa.sess.sig=mMRQWascH-If2-BC7v8xfRbmiNo; path=/; expires=Wed, 24 Feb 2021 06:59:09 GMT; httponly\"\n]\n\nconst result = await createHttpRequest(app)\n  .get('/set_header')\n  .set('Cookie', cookie)\n  .query({ name: 'harry' });\n")),(0,r.kt)("h2",{id:"test-service"},"Test service"),(0,r.kt)("p",null,"Outside the controller, sometimes we need to test a single service, which we can get from the dependency injection container."),(0,r.kt)("p",null,"Assume that a test ",(0,r.kt)("inlineCode",{parentName:"p"},"UserService")," is required."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/service/user.ts\nimport { Provide } from '@midwayjs/core';\n\n@Provide()\nexport class UserService {\n    async getUser() {\n    // xxx\n  }\n}\n")),(0,r.kt)("p",null,"Then write this in the test code."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createApp, close, createHttpRequest } from '@midwayjs/mock';\nimport { Framework } from '@midwayjs/web';\nimport * as assert from 'assert';\nimport { UserService } from '../../src/service/user';\n\ndescribe('test/controller/home.test.ts', () => {\n\n  it('should GET /', async () => {\n    // create app\n    const app = await createApp<Framework>();\n\n    // Obtain instances based on dependency injection class (recommended)\n    const userService = await app.getApplicationContext().getAsync<UserService>(UserService);\n    // Get the instance based on the dependency injection Id.\n    const userService = await app.getApplicationContext().getAsync<UserService>('userService');\n    // Incoming class Ignoring Generics can also correctly derive\n    const userService = await app.getApplicationContext().getAsync(UserService);\n\n    // close app\n    await close(app);\n  });\n\n});\n")),(0,r.kt)("p",null,"If your service is associated with a request (ctx), you can use the request scope to get the service."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createApp, close, createHttpRequest } from '@midwayjs/mock';\nimport { Framework } from '@midwayjs/web';\nimport * as assert from 'assert';\nimport { UserService } from '../../src/service/user';\n\ndescribe('test/controller/home.test.ts', () => {\n\n  it('should GET /', async () => {\n    // create app\n    const app = await createApp<Framework>();\n\n    // Get the instance based on the dependency injection Id.\n    const userService = await app.createAnonymousContext()\n                        .requestContext.getAsync<UserService>('userService');\n\n    // You can also pass in class to get an instance.\n    const userService = await app.createAnonymousContext()\n                        .requestContext.getAsync(UserService);\n\n    // close app\n    await close(app);\n  });\n\n});\n")),(0,r.kt)("h2",{id:"createapp-option-parameters"},"createApp option parameters"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"createApp")," method is used to create an app instance of a framework, and by passing in a generic framework type, the app we infer can be the app returned by the framework."),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Framework } from '@midwayjs/grpc';\n\n// The app here can ensure that it is the app returned by the gRPC framework.\nconst app = await createApp<Framework>();\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"createApp")," method actually has parameters, and its method signature is as follows."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"async createApp (\n  appDir = process.cwd()\n  options: IConfigurationOptions = {}\n)\n")),(0,r.kt)("p",null,"The first parameter is the absolute root directory path of the project, which defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"process.cwd()"),".\nThe second parameter is the Bootstrap startup parameter, such as the configuration of some global behaviors. for details, see TS definition."),(0,r.kt)("h2",{id:"close-option-parameter"},"Close option parameter"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"close")," method is used to close the framework related to the app instance."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"await close(app);\n")),(0,r.kt)("p",null,"It has some parameters."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare function close (\n  app: IMidwayApplication | IMidwayFramework<any, any>\n  options ?: {\n    cleanLogsDir?: boolean;\n    cleanTempDir?: boolean;\n    sleep?: number;\n}): Promise<void>;\n")),(0,r.kt)("p",null,"The first parameter is an instance of app or framework."),(0,r.kt)("p",null,"The second parameter is an object that can perform some behaviors when executing shutdown:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"cleanLogsDir")," defaults to false, and deletes the logs directory after the control test is completed (except windows)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("ol",{parentName:"li",start:2},(0,r.kt)("li",{parentName:"ol"},"The default ",(0,r.kt)("inlineCode",{parentName:"li"},"cleanTempDir")," is false, and some temporary directories (such as run directory generated by egg) are cleaned up."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("ol",{parentName:"li",start:3},(0,r.kt)("li",{parentName:"ol"},"The default value of ",(0,r.kt)("inlineCode",{parentName:"li"},"sleep")," is 50, in milliseconds, and the delay time after the app is turned off (to prevent the logs from being written without success).")))),(0,r.kt)("h2",{id:"test-with-bootstrap-files"},"Test with bootstrap files"),(0,r.kt)("p",null,"In general, you don't need to use ",(0,r.kt)("inlineCode",{parentName:"p"},"bootstrap.js")," to test. If you want to test directly using the ",(0,r.kt)("inlineCode",{parentName:"p"},"bootstrap.js")," entry file, you can pass the entry file information during the test."),(0,r.kt)("p",null,"Unlike dev/test startup, startup using ",(0,r.kt)("inlineCode",{parentName:"p"},"bootstrap.js")," is a real service that runs multiple frameworks at the same time and creates app instances of multiple frameworks."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"@midwayjs/mock")," provides ",(0,r.kt)("inlineCode",{parentName:"p"},"createBootstrap")," methods to test the startup file type. We can pass in the ",(0,r.kt)("inlineCode",{parentName:"p"},"bootstrap.js")," of the entry file as a startup parameter, so that ",(0,r.kt)("inlineCode",{parentName:"p"},"createBootstrap")," method starts the code through the entry file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"it('should GET /', async () => {\n  // create app\n  const bootstrap = await createBootstrap(join(process.cwd(), 'bootstrap.js'));\n  // Get an app instance based on the frame type.\n  const app = bootstrap.getApp('koa');\n\n  // expect and test\n\n  // close bootstrap\n  await bootstrap.close();\n});\n")),(0,r.kt)("h2",{id:"run-a-single-test"},"Run a single test"),(0,r.kt)("p",null,"Unlike the ",(0,r.kt)("inlineCode",{parentName:"p"},"only")," of mocha, the ",(0,r.kt)("inlineCode",{parentName:"p"},"only")," method of jest takes effect only for a single file.  ",(0,r.kt)("inlineCode",{parentName:"p"},"midway-bin")," provides the ability to run a single file."),(0,r.kt)(s.Z,{groupId:"scripts",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"jest",label:"Use jest directly",mdxType:"TabItem"},(0,r.kt)("p",null,"Execute a single file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ jest test/controller/api.ts\n")),(0,r.kt)("p",null,"If you want to run a specific test in a file, you can use jest's ",(0,r.kt)("inlineCode",{parentName:"p"},"-t")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"--testNamePattern")," option, followed by the name of the test you want to run. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ jest -t "name of your test"\n')),(0,r.kt)("p",null,"This will only run tests with matching names.")),(0,r.kt)(o.Z,{value:"cli",label:"Use @midwayjs/cli",mdxType:"TabItem"},(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"midway-bin")," provides the ability to run individual files."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ midway-bin test -f test/controller/api.ts\n")),(0,r.kt)("p",null,"In this way, you can specify to run the test of a file, and then cooperate with the ",(0,r.kt)("inlineCode",{parentName:"p"},"describe.only")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"it.only"),", so that you can run only a single test method in a single file."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"midway-bin test --ts")," is equivalent to the following command using jest directly."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ node --require=ts-node/register ./node_modules/.bin/jest\n")))),(0,r.kt)("h2",{id:"customize-jest-file-content"},"Customize Jest file content"),(0,r.kt)("p",null,"In general, the Midway tool chain has built-in jest configuration, so that users do not need to add this file. However, in some special scenarios, such as using VSCode or Idea editors, you may need to specify a ",(0,r.kt)("inlineCode",{parentName:"p"},"jest.config.js")," scenario when you need to develop and test in the visualization area. In this case, Midway supports creating a custom jest configuration file."),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"jest.config.js")," file in the root directory of the project."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u279c  my_midway_app tree\n.\n\u251c\u2500\u2500 src\n\u251c\u2500\u2500 test\n\u2502   \u2514\u2500\u2500 controller\n\u2502       \u2514\u2500\u2500 home.test.ts\n\u251c\u2500\u2500 jest.config.js\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 tsconfig.json\n")),(0,r.kt)("p",null,"The content is as follows. The configuration is the same as the standard jest."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"module.exports = {\n  preset: 'ts-jest',\n  testEnvironment: 'node',\n  testPathIgnorePatterns: ['<rootDir>/test/fixtures']\n  coveragePathIgnorePatterns: ['<rootDir>/test/']\n};\n")),(0,r.kt)("h2",{id:"common-settings"},"Common settings"),(0,r.kt)("p",null,"If you need to run some code before a single test, you can add ",(0,r.kt)("inlineCode",{parentName:"p"},"jest.setup.js"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const path = require('path');\n\nmodule.exports = {\n  preset: 'ts-jest',\n  testEnvironment: 'node',\n  testPathIgnorePatterns: ['<rootDir>/test/fixtures']\n  coveragePathIgnorePatterns: ['<rootDir>/test/']\n  setupFilesAfterEnv: ['<rootDir>/jest.setup.js'], // read jest.setup.js in advance\n};\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Note that ",(0,r.kt)("inlineCode",{parentName:"p"},"jest.setup.js")," can only use js files.")),(0,r.kt)("h3",{id:"example-1-the-problem-of-long-test-code-time"},"Example 1: The problem of long test code time"),(0,r.kt)("p",null,"If the following error occurs in the test, it means that your code takes a long time to execute (such as connecting to the database, running tasks, etc.). If you are sure that there is no problem with the code, you need to extend the startup time."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Timeout - Async callback was not invoked within the 5000 ms timeout specified by jest.setTimeout.Error: Timeout - Async callback was not invoked within the 5000 ms timeout specified by jest.setTimeout.\n")),(0,r.kt)("p",null,"The default time for jest is ",(0,r.kt)("strong",{parentName:"p"},"5000ms(5 seconds)"),". You can adjust it to more."),(0,r.kt)("p",null,"Can be modified at startup via ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,r.kt)(s.Z,{groupId:"scripts",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"jest",label:"Use jest directly",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "test": "jest --testTimeout=30000"\n  }\n}\n'))),(0,r.kt)(o.Z,{value:"cli",label:"Use @midwayjs/cli",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "test": "midway-bin test --ts --testTimeout=30000"\n  }\n}\n')),(0,r.kt)("p",null,"Here ",(0,r.kt)("inlineCode",{parentName:"p"},"testTimeout")," is the startup parameter of jest."))),(0,r.kt)("p",null,"You can write the following code in the ",(0,r.kt)("inlineCode",{parentName:"p"},"jest.setup.js")," file to adjust the jest timeout period."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// jest.setup.js\njest.setTimeout(30000);\n")),(0,r.kt)("h3",{id:"example-2-global-environment-variables"},"Example 2: Global Environment Variables"),(0,r.kt)("p",null,"Similarly, ",(0,r.kt)("inlineCode",{parentName:"p"},"jest.setup.js")," can also run custom code, such as setting global environment variables."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// jest.setup.js\nprocess.env.MIDWAY_TS_MODE = 'true';\n")),(0,r.kt)("h3",{id:"example-3-processing-where-the-program-cannot-exit-normally"},"Example 3: Processing where the program cannot exit normally"),(0,r.kt)("p",null,"Sometimes, because some codes (timers, listeners, etc.) run in the background, the process cannot be exited after a single test run. For this case, jest provides the ",(0,r.kt)("inlineCode",{parentName:"p"},"-forceExit")," parameter."),(0,r.kt)(s.Z,{groupId:"scripts",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"jest",label:"Use jest directly",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ jest --forceExit\n$ jest --coverage --forceExit\n"))),(0,r.kt)(o.Z,{value:"cli",label:"Use @midwayjs/cli",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ midway-bin test --ts --forceExit\n$ midway-bin cov --ts --forceExit\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"testTimeout")," here is the startup parameter of jest."))),(0,r.kt)("p",null,"You can also add attributes to a custom file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"module.exports = {\n  preset: 'ts-jest',\n  testEnvironment: 'node',\n  testPathIgnorePatterns: ['<rootDir>/test/fixtures']\n  coveragePathIgnorePatterns: ['<rootDir>/test/']\n  forceExit: true\n};\n")),(0,r.kt)("h3",{id:"example-4-parallel-change-to-serial-execution"},"Example 4: Parallel Change to Serial Execution"),(0,r.kt)("p",null,"By default, jest processes each test file in parallel. If there are scenarios such as startup ports in the test code, parallel processing may cause port conflicts and report errors. At this time, you need to add the ",(0,r.kt)("inlineCode",{parentName:"p"},"-runInBand")," parameter. Note that this parameter can only be loaded in the command."),(0,r.kt)(s.Z,{groupId:"scripts",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"jest",label:"Use jest directly",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ jest --runInBand\n$ jest --coverage --runInBand\n"))),(0,r.kt)(o.Z,{value:"cli",label:"Use @midwayjs/cli",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ midway-bin test --ts --runInBand\n$ midway-bin cov --ts --runInBand\n")))),(0,r.kt)("h2",{id:"editor-configuration"},"Editor configuration"),(0,r.kt)("h3",{id:"jetbrain-webstormidea-configuration"},"Jetbrain Webstorm/Idea configuration"),(0,r.kt)("p",null,'In the Jetbrain editor, the "jest" plug-in needs to be enabled. Since the sub-process is used to start, we still need to specify the load ',(0,r.kt)("inlineCode",{parentName:"p"},"-require = ts-node/register")," at startup."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img.alicdn.com/imgextra/i1/O1CN01Wa6UaE1p0zU82gnpL_!!6000000005299-2-tps-1500-951.png",alt:"image.png"})),(0,r.kt)("h3",{id:"vscode-configuration"},"VSCode configuration"),(0,r.kt)("p",null,"Search the plug-in first and install Jest Runner.\n",(0,r.kt)("img",{parentName:"p",src:"https://img.alicdn.com/imgextra/i3/O1CN01D6zTxi1GiwwrqhHVW_!!6000000000657-2-tps-1242-877.png",alt:"image.png"}),"\nOpen the configuration and configure the jest command path."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img.alicdn.com/imgextra/i4/O1CN017BK54o1n2FL7x8hI0_!!6000000005031-2-tps-1266-849.png",alt:"image.png"})),(0,r.kt)("p",null,"Enter ",(0,r.kt)("inlineCode",{parentName:"p"},"node -- require = ts-node/register ./node_modules/.bin/jest")," at the jest command."),(0,r.kt)("p",null,"Or set settings.json in the workspace folder. vscode."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jest.pathToJest": "node --require=ts-node/register ./node_modules/.bin/jest --detectOpenHandles ",\n  "jestrunner.jestCommand": "node --require=ts-node/register ./node_modules/.bin/jest --detectOpenHandles"\n}\n')),(0,r.kt)("p",null,"Since the debugging of the jest runner plug-in uses the debugging of VSNode, the launch.json of VSNode needs to be configured separately."),(0,r.kt)("p",null,"Set launch.json in the folder. vscode"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "version": "0.0.1 ",\n  "configurations": [\n    {\n      "name": "Debug Jest Tests ",\n      "type": "node ",\n      "request": "launch ",\n      "runtimeArgs": [\n        "--inspect-brk ",\n        "--require=ts-node/register ",\n        "${workspaceRoot}/node_modules/.bin/jest ",\n        "--runInBand ",\n        "--detectOpenHandles"\n      ],\n      "console": "integratedTerminal ",\n      "internalConsoleOptions": "neverOpen"\n    }\n  ]\n}\n')),(0,r.kt)("h2",{id:"about-alias-paths"},"About alias paths"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"mwtsc")," tool does not support the Alias Path feature."),(0,r.kt)("h2",{id:"about-mock-data"},"About mock data"),(0,r.kt)("p",null,"Simulation data is a capability that can be used in both development and testing. For more information, see ",(0,r.kt)("a",{parentName:"p",href:"./mock"},"Simulation data"),"."))}h.isMDXComponent=!0}}]);