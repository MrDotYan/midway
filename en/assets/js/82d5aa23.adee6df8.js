"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[45078],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>k});var a=t(67294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(t),m=s,k=p["".concat(c,".").concat(m)]||p[m]||d[m]||r;return t?a.createElement(k,o(o({ref:n},u),{},{components:t})):a.createElement(k,o({ref:n},u))}));function k(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,o=new Array(r);o[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[p]="string"==typeof e?e:s,o[1]=i;for(var l=2;l<r;l++)o[l]=t[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},64765:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=t(87462),s=(t(67294),t(3905));const r={},o="Alibaba Cloud Object Storage (OSS)",i={unversionedId:"extensions/oss",id:"extensions/oss",title:"Alibaba Cloud Object Storage (OSS)",description:"Object Storage Service (OSS) is a massive, secure, low-cost, and highly reliable cloud storage service provided by Alibaba Cloud. Its data design durability is not less than 99.999999999% and service design availability is not less than 99.99%. With platform-independent RESTful API interfaces, you can store and access any type of data in any application, at any time, and at any place.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/extensions/oss.md",sourceDirName:"extensions",slug:"/extensions/oss",permalink:"/en/docs/extensions/oss",draft:!1,editUrl:"https://github.com/midwayjs/midway/tree/main/site/docs/extensions/oss.md",tags:[],version:"current",frontMatter:{},sidebar:"component",previous:{title:"Caching",permalink:"/en/docs/extensions/caching"},next:{title:"Tencent Cloud Object Storage (COS)",permalink:"/en/docs/extensions/cos"}},c={},l=[{value:"Antecedents",id:"antecedents",level:2},{value:"Installation dependency",id:"installation-dependency",level:2},{value:"Introducing components",id:"introducing-components",level:2},{value:"Configure OSS",id:"configure-oss",level:2},{value:"Use components",id:"use-components",level:2},{value:"Use multiple OSS Buckets",id:"use-multiple-oss-buckets",level:2}],u={toc:l},p="wrapper";function d(e){let{components:n,...t}=e;return(0,s.kt)(p,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"alibaba-cloud-object-storage-oss"},"Alibaba Cloud Object Storage (OSS)"),(0,s.kt)("p",null,"Object Storage Service (OSS) is a massive, secure, low-cost, and highly reliable cloud storage service provided by Alibaba Cloud. Its data design durability is not less than 99.999999999% and service design availability is not less than 99.99%. With platform-independent RESTful API interfaces, you can store and access any type of data in any application, at any time, and at any place."),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"@midwayjs/oss")," component is the sdk used to interface with OSS services under the midway system."),(0,s.kt)("p",null,"Related information:"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Description"),(0,s.kt)("th",{parentName:"tr",align:null}))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Can be used for standard projects"),(0,s.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Can be used for Serverless"),(0,s.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Can be used for integration"),(0,s.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Contains independent main framework"),(0,s.kt)("td",{parentName:"tr",align:null},"\u274c")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"Contains independent logs"),(0,s.kt)("td",{parentName:"tr",align:null},"\u274c")))),(0,s.kt)("h2",{id:"antecedents"},"Antecedents"),(0,s.kt)("p",null,"To use OSS components, you need to apply for an OSS bucket in advance. Bucket is the concept of OSS repository in which all your files are stored."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"OSS Object Storage Service (OSS): ",(0,s.kt)("a",{parentName:"li",href:"https://www.aliyun.com/product/oss"},"https:// www.aliyun.com/product/oss")),(0,s.kt)("li",{parentName:"ul"},"What is Object Storage: ",(0,s.kt)("a",{parentName:"li",href:"https://www.alibabacloud.com/help/zh/doc-detail/31817.htm"},"https:// www.alibabacloud.com/help/zh/doc-detail/31817 htm"))),(0,s.kt)("h2",{id:"installation-dependency"},"Installation dependency"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"@midwayjs/oss")," is the main function package of oss."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm i @midwayjs/oss@3 --save\n")),(0,s.kt)("p",null,"Or reinstall the following dependencies in ",(0,s.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "dependencies": {\n    "@midwayjs/oss": "^3.0.0",\n    // ...\n  }\n}\n')),(0,s.kt)("h2",{id:"introducing-components"},"Introducing components"),(0,s.kt)("p",null,"First, introduce components and import them in ",(0,s.kt)("inlineCode",{parentName:"p"},"configuration.ts"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Configuration } from '@midwayjs/core';\nimport * as oss from '@midwayjs/oss';\nimport { join } from 'path'\n\n@Configuration({\n  imports: [\n    // ...\n    oss // import oss components\n  ],\n  importConfigs: [\n    join(__dirname, 'config')\n  ]\n})\nexport class MainConfiguration {\n}\n")),(0,s.kt)("h2",{id:"configure-oss"},"Configure OSS"),(0,s.kt)("p",null,"OSS components need to be configured before they can be used. You need to enter OSS bucket, accessKeyId, accessKeySecret and other necessary information."),(0,s.kt)("p",null,"Supports common oss clients and oss cluster clients based on the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/ali-sdk/ali-oss/"},"ali-oss")," package."),(0,s.kt)("p",null,"For example:"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Common OSS bucket configuration")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default\nexport default {\n  // ...\n  oss: {\n    // normal oss bucket\n    client: {\n      accessKeyId: 'your access key',\n      accessKeySecret: 'your access secret',\n      bucket: 'your bucket name',\n      endpoint: 'oss-cn-hongkong.aliyuncs.com',\n      timeout: '60s',\n    },\n  },\n}\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"OSS bucket configuration in cluster (cluster) mode, you need to configure multiple")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default\nexport default {\n  // ...\n  oss: {\n    // need to config all bucket information under cluster\n    client: {\n      clusters: [{\n        endpoint: 'host1',\n        accessKeyId: 'id1',\n        accessKeySecret: 'secret1',\n      }, {\n        endpoint: 'host2',\n        accessKeyId: 'id2',\n        accessKeySecret: 'secret2',\n      }],\n      schedule: 'masterSlave', //default is 'roundRobin'\n      timeout: '60s',\n    }\n  },\n}\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"STS")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default\nexport default {\n  // ...\n  oss: {\n    // if config.sts == true, oss will create STS client\n    client: {\n      sts: true\n      accessKeyId: 'your access key',\n      accessKeySecret: 'your access secret',\n    },\n  },\n}\n")),(0,s.kt)("h2",{id:"use-components"},"Use components"),(0,s.kt)("p",null,"You can directly get the ",(0,s.kt)("inlineCode",{parentName:"p"},"OSSService")," and then call the interface, for example, to save the file."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"import { OSSService } from '@midwayjs/oss';\nimport { join } from 'path';\n\n@Provide()\nexport class UserService {\n\n  @Inject()\n  ossService: OSSService;\n\n  async saveFile() {\n\n\n    const localFile = join(__dirname, 'test.log');\n    const result = await this.ossService.put('/test/test.log', localFile);\n\n    // => result.url\n  }\n}\n")),(0,s.kt)("p",null,"If STS mode is configured, the client can use ",(0,s.kt)("inlineCode",{parentName:"p"},"OSSSTSService"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"import { OSSSTSService } from '@midwayjs/oss';\nimport { join } from 'path';\n\n@Provide()\nexport class UserService {\n\n  @Inject()\n  stsService: OSSSTSService;\n\n  async saveFile() {\n\n    const roleArn = '******'; // This is arn of ariyun role\n    const result = await this.stsService.assumeRole(roleArn);\n\n    // result.credentials.AccessKeyId\n    // result.credentials.AccessKeySecret;\n    // result.credentials.SecurityToken;\n  }\n}\n")),(0,s.kt)("p",null,"For more information about OSS client APIs, see ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/ali-sdk/ali-oss"},"OSS documentation"),"."),(0,s.kt)("h2",{id:"use-multiple-oss-buckets"},"Use multiple OSS Buckets"),(0,s.kt)("p",null,"Some applications need to access multiple oss buckets, so you need to configure ",(0,s.kt)("inlineCode",{parentName:"p"},"oss.clients"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"// src/config/config.default\nexport default {\n  // ...\n  oss: {\n    clients: {\n      bucket1: {\n        bucket: 'bucket1',\n        // ...\n      },\n      bucket2: {\n        bucket: 'bucket2',\n        // ...\n      },\n    },\n    // client, clients, configuration shared by createInstance methods\n    default: {\n      endpoint: '',\n      accessKeyId: '',\n      accessKeySecret: '',\n    },\n  },\n  // other custom config\n  bucket3: {\n    bucket: 'bucket3',\n    // ...\n  },\n}\n")),(0,s.kt)("p",null,"You can use ",(0,s.kt)("inlineCode",{parentName:"p"},"OSSServiceFactory")," to get different instances."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"import { OSSServiceFactory } from '@midwayjs/oss';\nimport { join } from 'path';\n\n@Provide()\nexport class UserService {\n\n  @Inject()\n  ossServiceFactory: OSSServiceFactory;\n\n  @Config('bucket3')\n  bucket3Config;\n\n  async saveFile() {\n\n    // The default type is OSSService\n    const bucket1 = this.ossServiceFactory.get('bucket1');\n    const bucket2 = this.ossServiceFactory.get('bucket2');\n\n    // If it is STS, you need to set a generic contact.\n    // const bucket1 = this.ossServiceFactory.get<OSSSTSService>('bucket1');\n\n    // config.bucket3 and config.oss.default will be merged\n    const bucket3 = await this.ossServiceFactory.createInstance(this.bucket3Config, 'bucket3');\n    // After passing the name, you can also get it from the factory.\n    bucket3 = this.ossServiceFactory.get('bucket3');\n\n  }\n}\n")))}d.isMDXComponent=!0}}]);